name: 'Create release'

on:
  workflow_dispatch:
    inputs:
      bumpType:
        description: 'Quel type de version ?'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
        with:
          fetch-depth: '0'
          token: ${{ secrets.TOKEN_GITHUB_FOR_GITHUB_ACTION }}

      - name: "Calculate versions from bump type"
        id: calculate-version
        run: |
          bumpType="${{ github.event.inputs.bumpType }}"
          latestTag=$(git tag --list --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "Latest tag: $latestTag"

          if [[ -z "$latestTag" ]]; then
            echo "No tag found, using 0.0.0 as base"
            latestTag="0.0.0"
          fi

          IFS='.' read -r major minor patch <<< "$latestTag"

          if [[ "$bumpType" == "major" ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [[ "$bumpType" == "minor" ]]; then
            minor=$((minor + 1))
            patch=0
          else
            patch=$((patch + 1))
          fi

          releaseVersion="${major}.${minor}.${patch}"
          snapshotVersion="${major}.${minor}.$((patch + 1))-SNAPSHOT"

          echo "releaseVersion=$releaseVersion" >> $GITHUB_OUTPUT
          echo "snapshotVersion=$snapshotVersion" >> $GITHUB_OUTPUT
          
          echo "New tag: $releaseVersion"
          echo "New Snapshot tag: $snapshotVersion"

      - name: 'Verify release is created only on "main" or "master" git branch'
        run: |
          CURRENT_GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo $CURRENT_GIT_BRANCH
          [[ "$CURRENT_GIT_BRANCH" == "main" || "$CURRENT_GIT_BRANCH" == "master" ]] && exit 0 || exit 1

      - name: 'Verify version is semver formatted (X.X.X)'
        env:
          NEW_TAG: ${{ steps.calculate-version.outputs.releaseVersion }}
        run: |
          echo $NEW_TAG | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'

      - name: 'Verify version is not already used as a git tag'
        env:
          NEW_TAG: ${{ steps.calculate-version.outputs.releaseVersion }}
        run: |
          [[ "$(git tag --list | grep $NEW_TAG)" == "" ]] && exit 0 || exit 1

      - name: 'Verify snapshot version is semver formatted (X.X.X)'
        env:
          NEW_SNAPSHOT_TAG: ${{ steps.calculate-version.outputs.snapshotVersion }}
        run: |
          echo $NEW_SNAPSHOT_TAG | grep -E '^[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$'

      - name: 'Generate the new version (patch few files + git tag)'
        env:
          NEW_TAG: ${{ steps.calculate-version.outputs.releaseVersion }}
          NEW_SNAPSHOT_TAG: ${{ steps.calculate-version.outputs.snapshotVersion }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB_FOR_GITHUB_ACTION }}
        run: |
          git config --global user.email "github-action@noreply"
          git config --global user.name "Github Action"
          sudo apt-get install -y libxml2-utils

          echo -e "setns x=http://maven.apache.org/POM/4.0.0\ncd /x:project/x:version\nset $NEW_TAG\nsave" \
            | xmllint --shell ./pom.xml

          for POM_FILE in $(ls */pom.xml)
          do
            echo -e "setns x=http://maven.apache.org/POM/4.0.0\ncd /x:project/x:parent/x:version\nset $NEW_TAG\nsave" \
              | xmllint --shell $POM_FILE
          done

          sed -i "s#Version: [0-9]\+\.[0-9]\+\.[0-9]\+\(-SNAPSHOT\)\?#Version: $NEW_TAG#g" README.md

          git add .
          git commit -m "Version $NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          git commit --amend -m "Version $NEW_TAG [skip ci]"
          git push

          git switch develop
          git merge main -m "Merge main to develop [skip ci]"
          git push

          echo -e "setns x=http://maven.apache.org/POM/4.0.0\ncd /x:project/x:version\nset $NEW_SNAPSHOT_TAG\nsave" \
            | xmllint --shell ./pom.xml

          for POM_FILE in $(ls */pom.xml)
          do
            echo -e "setns x=http://maven.apache.org/POM/4.0.0\ncd /x:project/x:parent/x:version\nset $NEW_SNAPSHOT_TAG\nsave" \
              | xmllint --shell $POM_FILE
          done

          sed -i "s#Version: [0-9]\+\.[0-9]\+\.[0-9]\+\(-SNAPSHOT\)\?#Version: $NEW_SNAPSHOT_TAG#g" README.md

          git add .
          git commit -m "Version $NEW_SNAPSHOT_TAG [skip ci]"
          git push

      - name: 'Create the github release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.calculate-version.outputs.releaseVersion }}
          generate_release_notes: true
          token: ${{ secrets.TOKEN_GITHUB_FOR_GITHUB_ACTION }}
